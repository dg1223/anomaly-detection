# Azure Databricks Build Pipeline
# azure-pipelines.yml

trigger:
- azureDevOps

pool:
  name: Hosted Ubuntu 1604

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python 3.8'
  inputs:
    versionSpec: 3.8

- script: |
    python -m pip install --upgrade pip
    pip install requests setuptools wheel pylint black flake8 flake8-comprehensions pep8-naming mypy pytest httpagentparser pandas numpy build 
    pip install -U databricks-connect==8.1.*
  displayName: 'Load Python Dependencies'

- script: |
    echo "y
    $(WORKSPACE-REGION-URL)
    $(CSE-DEVELOP-PAT)
    $(EXISTING-CLUSTER-ID)
    $(WORKSPACE-ORG-ID)
    15001" | databricks-connect configure
  displayName: 'Configure DBConnect'

- checkout: self
  persistCredentials: true
  clean: true

- script: git checkout azureDevOps
  displayName: 'Get Latest Branch'

# - script: |
#     python -m pytest

#   displayName: 'Run Python Unit Tests for library code'

- script: |
    python3 -m build --sdist --wheel
  displayName: 'Build Python Wheel for Libs'

- script: |
    git diff --name-only --diff-filter=AMR HEAD^1 HEAD | xargs -I '{}' cp --parents -r '{}' $(Build.BinariesDirectory)

    mkdir -p $(Build.BinariesDirectory)/libs
    cp $(Build.Repository.LocalPath)/dist/*.* $(Build.BinariesDirectory)/libs

    mkdir -p $(Build.BinariesDirectory)/cicd-scripts
    cp $(Build.Repository.LocalPath)/cicd-scripts/*.* $(Build.BinariesDirectory)/cicd-scripts

  displayName: 'Get Changes'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: 'DatabricksBuild'

- task: TwineAuthenticate@1
  inputs:
    artifactFeed: 'caaswx-feed1'

- script: |
   twine upload -r "caaswx-feed1" --config-file $(PYPIRC_PATH) dist/*